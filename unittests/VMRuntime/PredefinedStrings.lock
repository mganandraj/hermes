/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the LICENSE
 * file in the root directory of this source tree.
 */
#ifndef EXPECT
#define EXPECT(string)
#endif

EXPECT("")
EXPECT(",")
EXPECT(" ")
EXPECT("anonymous")

EXPECT("undefined")
EXPECT("null")
EXPECT("number")
EXPECT("string")
EXPECT("default")
EXPECT("boolean")
EXPECT("symbol")
EXPECT("object")
EXPECT("function")
EXPECT("toString")
EXPECT("toLocaleString")
EXPECT("hasOwnProperty")
EXPECT("isPrototypeOf")
EXPECT("propertyIsEnumerable")
EXPECT("valueOf")
EXPECT("true")
EXPECT("false")
EXPECT("NaN")
EXPECT("0")
EXPECT("Infinity")
EXPECT("+Infinity")
EXPECT("-Infinity")
EXPECT("print")
EXPECT("eval")
EXPECT("quit")
EXPECT("parseInt")
EXPECT("parseFloat")
EXPECT("isNaN")
EXPECT("isFinite")
EXPECT("escape")
EXPECT("unescape")
EXPECT("decodeURI")
EXPECT("decodeURIComponent")
EXPECT("encodeURI")
EXPECT("encodeURIComponent")
EXPECT("prototype")
EXPECT("constructor")
EXPECT("Object")
EXPECT("value")
EXPECT("writable")
EXPECT("enumerable")
EXPECT("configurable")
EXPECT("get")
EXPECT("set")
EXPECT("getPrototypeOf")
EXPECT("setPrototypeOf")
EXPECT("getOwnPropertyDescriptor")
EXPECT("getOwnPropertyNames")
EXPECT("getOwnPropertySymbols")
EXPECT("seal")
EXPECT("freeze")
EXPECT("create")
EXPECT("defineProperty")
EXPECT("defineProperties")
EXPECT("preventExtensions")
EXPECT("is")
EXPECT("isSealed")
EXPECT("isFrozen")
EXPECT("isExtensible")
EXPECT("keys")
EXPECT("length")
EXPECT("__proto__")
EXPECT("__defineGetter__")
EXPECT("__defineSetter__")
EXPECT("__lookupGetter__")
EXPECT("__lookupSetter__")
EXPECT("assign")
EXPECT("raw")
EXPECT("globalThis")

EXPECT("String")
EXPECT("fromCharCode")
EXPECT("fromCodePoint")
EXPECT("charAt")
EXPECT("charCodeAt")
EXPECT("codePointAt")
EXPECT("concat")
EXPECT("endsWith")
EXPECT("slice")
EXPECT("startsWith")
EXPECT("substring")
EXPECT("toLowerCase")
EXPECT("toLocaleLowerCase")
EXPECT("toUpperCase")
EXPECT("toLocaleUpperCase")
EXPECT("substr")
EXPECT("trim")
EXPECT("trimLeft")
EXPECT("trimRight")
EXPECT("indexOf")
EXPECT("lastIndexOf")
EXPECT("localeCompare")
EXPECT("match")
EXPECT("normalize")
EXPECT("padEnd")
EXPECT("padStart")
EXPECT("repeat")
EXPECT("replace")
EXPECT("search")
EXPECT("split")

EXPECT("Function")
EXPECT("callee")
EXPECT("caller")
EXPECT("arguments")
EXPECT("call")
EXPECT("apply")
EXPECT("bind")
EXPECT("gc")

EXPECT("name")
EXPECT("message")
EXPECT("stack")
EXPECT("Stacktrace too long")
EXPECT(": ")

EXPECT("Error")
EXPECT("EvalError")
EXPECT("RangeError")
EXPECT("ReferenceError")
EXPECT("SyntaxError")
EXPECT("TypeError")
EXPECT("URIError")

EXPECT("Array")
EXPECT("Array Iterator")
EXPECT("isArray")
EXPECT("join")
EXPECT("push")
EXPECT("pop")
EXPECT("reverse")
EXPECT("shift")
EXPECT("sort")
EXPECT("splice")
EXPECT("unshift")
EXPECT("every")
EXPECT("some")
EXPECT("forEach")
EXPECT("map")
EXPECT("filter")
EXPECT("reduce")
EXPECT("reduceRight")
EXPECT("find")
EXPECT("findIndex")
EXPECT("includes")
EXPECT("subarray")

EXPECT("ArrayBuffer")
EXPECT("byteLength")
EXPECT("isView")
EXPECT("buffer")
EXPECT("byteOffset")
EXPECT("copyWithin")
EXPECT("entries")

EXPECT("TypedArray")
EXPECT("BYTES_PER_ELEMENT")
EXPECT("from")
EXPECT("of")

EXPECT("Int8Array")
EXPECT("Int16Array")
EXPECT("Int32Array")
EXPECT("Uint8Array")
EXPECT("Uint8ClampedArray")
EXPECT("Uint16Array")
EXPECT("Uint32Array")
EXPECT("Float32Array")
EXPECT("Float64Array")

EXPECT("DataView")

EXPECT("getInt8")
EXPECT("setInt8")
EXPECT("getInt16")
EXPECT("setInt16")
EXPECT("getInt32")
EXPECT("setInt32")
EXPECT("getUint8")
EXPECT("setUint8")
EXPECT("getUint16")
EXPECT("setUint16")
EXPECT("getUint32")
EXPECT("setUint32")
EXPECT("getFloat32")
EXPECT("setFloat32")
EXPECT("getFloat64")
EXPECT("setFloat64")

EXPECT("fill")

EXPECT("Set")
EXPECT("Set Iterator")
EXPECT("Map")
EXPECT("Map Iterator")
EXPECT("add")
EXPECT("clear")
EXPECT("delete")
EXPECT("has")
EXPECT("size")
EXPECT("values")
EXPECT("next")
EXPECT("done")
EXPECT("return")

EXPECT("Number")
EXPECT("MAX_VALUE")
EXPECT("MIN_VALUE")
EXPECT("NEGATIVE_INFINITY")
EXPECT("POSITIVE_INFINITY")
EXPECT("EPSILON")
EXPECT("MAX_SAFE_INTEGER")
EXPECT("MIN_SAFE_INTEGER")
EXPECT("toFixed")
EXPECT("toExponential")
EXPECT("toPrecision")
EXPECT("isInteger")
EXPECT("isSafeInteger")

EXPECT("Boolean")

EXPECT("String Iterator")

EXPECT("Date")
EXPECT("UTC")
EXPECT("parse")
EXPECT("now")
EXPECT("toISOString")
EXPECT("toUTCString")
EXPECT("toGMTString")
EXPECT("toLocaleDateString")
EXPECT("toLocaleTimeString")
EXPECT("toJSON")
EXPECT("getTime")
EXPECT("getFullYear")
EXPECT("getYear")
EXPECT("getMonth")
EXPECT("getDate")
EXPECT("getDay")
EXPECT("getHours")
EXPECT("getMinutes")
EXPECT("getSeconds")
EXPECT("getMilliseconds")
EXPECT("getUTCFullYear")
EXPECT("getUTCMonth")
EXPECT("getUTCDate")
EXPECT("getUTCDay")
EXPECT("getUTCHours")
EXPECT("getUTCMinutes")
EXPECT("getUTCSeconds")
EXPECT("getUTCMilliseconds")
EXPECT("getTimezoneOffset")
EXPECT("setTime")
EXPECT("setFullYear")
EXPECT("setYear")
EXPECT("setMonth")
EXPECT("setDate")
EXPECT("setHours")
EXPECT("setMinutes")
EXPECT("setSeconds")
EXPECT("setMilliseconds")
EXPECT("setUTCFullYear")
EXPECT("setUTCMonth")
EXPECT("setUTCDate")
EXPECT("setUTCHours")
EXPECT("setUTCMinutes")
EXPECT("setUTCSeconds")
EXPECT("setUTCMilliseconds")
EXPECT("toDateString")
EXPECT("toTimeString")
EXPECT("Invalid Date")

EXPECT("RegExp")
EXPECT("exec")
EXPECT("test")
EXPECT("index")
EXPECT("input")
EXPECT("flags")
EXPECT("source")
EXPECT("global")
EXPECT("ignoreCase")
EXPECT("multiline")
EXPECT("unicode")
EXPECT("sticky")
EXPECT("lastIndex")
EXPECT("$1")
EXPECT("$2")
EXPECT("$3")
EXPECT("$4")
EXPECT("$5")
EXPECT("$6")
EXPECT("$7")
EXPECT("$8")
EXPECT("$9")
EXPECT("$`")
EXPECT("leftContext")
EXPECT("$'")
EXPECT("rightContext")
EXPECT("$_")
EXPECT("$&")
EXPECT("lastMatch")
EXPECT("$+")
EXPECT("lastParen")

EXPECT("Math")
EXPECT("E")
EXPECT("LN10")
EXPECT("LN2")
EXPECT("LOG2E")
EXPECT("LOG10E")
EXPECT("PI")
EXPECT("SQRT1_2")
EXPECT("SQRT2")
EXPECT("abs")
EXPECT("acos")
EXPECT("acosh")
EXPECT("asin")
EXPECT("asinh")
EXPECT("atan")
EXPECT("atanh")
EXPECT("atan2")
EXPECT("cbrt")
EXPECT("ceil")
EXPECT("clz32")
EXPECT("cos")
EXPECT("cosh")
EXPECT("exp")
EXPECT("expm1")
EXPECT("floor")
EXPECT("hypot")
EXPECT("log")
EXPECT("log10")
EXPECT("log1p")
EXPECT("log2")
EXPECT("trunc")
EXPECT("fround")
EXPECT("max")
EXPECT("min")
EXPECT("imul")
EXPECT("pow")
EXPECT("random")
EXPECT("round")
EXPECT("sign")
EXPECT("sin")
EXPECT("sinh")
EXPECT("sqrt")
EXPECT("tan")
EXPECT("tanh")

EXPECT("JSON")
EXPECT("stringify")

EXPECT("WeakMap")
EXPECT("WeakSet")

EXPECT("Symbol")
EXPECT("for")
EXPECT("keyFor")
EXPECT("hasInstance")
EXPECT("isConcatSpreadable")
EXPECT("iterator")
EXPECT("toPrimitive")
EXPECT("toStringTag")

EXPECT("Generator")
EXPECT("throw")
EXPECT("GeneratorFunction")

EXPECT("HermesInternal")
EXPECT("detachArrayBuffer")
EXPECT("createHeapSnapshot")
EXPECT("getEpilogues")
EXPECT("getWeakSize")
EXPECT("silentSetPrototypeOf")
EXPECT("getInstrumentedStats")
EXPECT("getRuntimeProperties")
EXPECT("ttiReached")
EXPECT("ttrcReached")
EXPECT("js_hostFunctionTime")
EXPECT("js_hostFunctionCPUTime")
EXPECT("js_hostFunctionCount")
EXPECT("js_evaluateJSTime")
EXPECT("js_evaluateJSCPUTime")
EXPECT("js_evaluateJSCount")
EXPECT("js_incomingFunctionTime")
EXPECT("js_incomingFunctionCPUTime")
EXPECT("js_incomingFunctionCount")
EXPECT("js_hermesTime")
EXPECT("js_hermesCPUTime")
EXPECT("js_hermesThreadMinorFaults")
EXPECT("js_hermesThreadMajorFaults")
EXPECT("js_numGCs")
EXPECT("js_gcCPUTime")
EXPECT("js_gcTime")
EXPECT("js_VMExperiments")

EXPECT("return this")
EXPECT("getTemplateObject")
EXPECT("ensureObject")
EXPECT("throwTypeError")
EXPECT("generatorSetDelegated")
EXPECT("copyDataProperties")
EXPECT("copyRestArgs")
EXPECT("arraySpread")
EXPECT("exportAll")
EXPECT("exponentiationOperator")

EXPECT("require")
EXPECT("requireFast")
EXPECT("context")
EXPECT("exports")
EXPECT("./")
EXPECT("?default")

EXPECT("[object Undefined]")
EXPECT("[object Null]")
EXPECT("[object global]")
EXPECT("[Symbol.hasInstance]")
EXPECT("[Symbol.iterator]")
EXPECT("[Symbol.toPrimitive]")
EXPECT("[Symbol.toStringTag]")
EXPECT("[Symbol.match]")
EXPECT("[Symbol.search]")
EXPECT("[Symbol.replace]")
EXPECT("[Symbol.split]")

EXPECT("[object Object]")
EXPECT("[object Error]")
EXPECT("[object Arguments]")
EXPECT("[object Array]")
EXPECT("[object ArrayBuffer]")
EXPECT("[object DataView]")

EXPECT("[object Int8Array]")
EXPECT("[object Int16Array]")
EXPECT("[object Int32Array]")
EXPECT("[object Uint8Array]")
EXPECT("[object Uint8ClampedArray]")
EXPECT("[object Uint16Array]")
EXPECT("[object Uint32Array]")
EXPECT("[object Float32Array]")
EXPECT("[object Float64Array]")
EXPECT("[object Array Iterator]")
EXPECT("[object Set]")
EXPECT("[object Map]")
EXPECT("[object Set Iterator]")
EXPECT("[object Map Iterator]")
EXPECT("[object WeakMap]")
EXPECT("[object WeakSet]")
EXPECT("[object Boolean]")
EXPECT("[object String]")
EXPECT("[object Number]")
EXPECT("[object Symbol]")
EXPECT("[object String Iterator]")
EXPECT("[object JSON]")
EXPECT("[object Math]")
EXPECT("[object Date]")
EXPECT("[object RegExp]")
EXPECT("[object RequireContext]")
EXPECT("[object Generator]")
EXPECT("[object Function]")

EXPECT("nativePerformanceNow")
EXPECT("nativeLoggingHook")
EXPECT("nativeQPLMarkerPoint")
EXPECT("jsEngine")
EXPECT("nativeCallSyncHook")
EXPECT("nativeFlushQueueImmediate")
EXPECT("nativeTraceBeginSection")
EXPECT("nativeTraceEndSection")
EXPECT("nativeTraceBeginAsyncSection")
EXPECT("nativeTraceEndAsyncSection")
EXPECT("nativeTraceCounter")
EXPECT("nativeModuleProxy")
EXPECT("nativeGetThreadCpuTimeMillis")
EXPECT("nativeQPLTimestamp")
EXPECT("nativeQPLMarkerStart")
EXPECT("nativeQPLMarkerEnd")
EXPECT("nativeQPLMarkerNote")
EXPECT("nativeQPLMarkerTag")
EXPECT("nativeQPLMarkerAnnotate")
EXPECT("nativeQPLMarkerCancel")
EXPECT("nativeGetThreadMajorPageFaults")
EXPECT("__jsiExecutorDescription")

#undef EXPECT
