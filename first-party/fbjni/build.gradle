// Copyright (c) Facebook, Inc. and its affiliates.
//
// This source code is licensed under the Apache-2 license found in the
// LICENSE file in the root directory of this source tree.

buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.2'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'maven'

repositories {
    google()
    jcenter()
}

android {
    compileSdkVersion 28
    buildToolsVersion '29.0.1'

    externalNativeBuild {
        cmake {
            path 'CMakeLists.txt'
        }
    }

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        buildConfigField "boolean", "IS_INTERNAL_BUILD", 'true'

        sourceSets {
            main {
                manifest.srcFile 'java/com/facebook/jni/AndroidManifest.xml'
                java.srcDir 'java'
            }
        }

        ndk {
            abiFilters 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }

        externalNativeBuild {
            cmake {
                arguments '-DANDROID_TOOLCHAIN=clang'
                targets 'fbjni'
            }
        }
    }
}

dependencies {
    compileOnly 'com.google.code.findbugs:jsr305:3.0.1'
    implementation 'com.facebook.soloader:soloader:0.6.0'
}

// apply from: rootProject.file('gradle/release.gradle')

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task bundleHeaderFilesIntoAAR(type: Zip) {
    baseName = "${project.name}-release-with-headers"
    version = version
    extension = 'aar'
    destinationDir = file("$buildDir/outputs/aar/")

    from zipTree("$buildDir/outputs/aar/" + project.name + "-release.aar")
    from("cxx") {
        include("**/*.h")
        into('include')
    }
}

tasks.whenTaskAdded { task ->
    if (task.name.startsWith('assembleRelease')) {
        task.finalizedBy(bundleHeaderFilesIntoAAR)
    }
}

artifacts.add('archives', sourcesJar)
