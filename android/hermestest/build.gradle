apply plugin: 'com.android.application'

buildDir = "${rootProject.ext.hermes_ws}/build_android/hermestest"
buildDir.mkdirs()

task extractAARHeaders {
    doLast {
        configurations.extractHeaders.files.each {
            def file = it.absoluteFile
            copy {
                from zipTree(file)
                into "$buildDir/$file.name"
                include "**/*.h"
            }
        }
    }
}

task extractJNIFiles {
    doLast {
        configurations.extractJNI.files.each {
            def file = it.absoluteFile
            copy {
                from zipTree(file)
                into "$buildDir/$file.name"
                include "jni/**/*"
            }
        }
    }
}

tasks.whenTaskAdded { task ->
    if (task.name.contains('externalNativeBuild')) {
        task.dependsOn(extractAARHeaders)
        task.dependsOn(extractJNIFiles)
    }
}

android {
    compileSdkVersion = rootProject.ext.compileSdkVersion

    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.example.hermestest"
        minSdkVersion = rootProject.ext.minSdkVersion
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_STL=c++_shared"
                // arguments "-DANDROID_PIE=True"
            }
        }

        ndk {
            abiFilters (*rootProject.ext.abis)
        }

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            version "3.6.0"
            path "CMakeLists.txt"
            buildStagingDirectory = "${rootProject.ext.hermes_ws}/staging/hermestest"
            buildStagingDirectory.mkdirs()
        }
    }

    configurations {
        extractHeaders
        extractJNI
    }
}

dependencies {

    implementation project(":hermes")

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'android.arch.navigation:navigation-fragment:1.0.0'
    implementation 'android.arch.navigation:navigation-ui:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    api("com.facebook.soloader:soloader:0.5.1")

    api("com.facebook.yoga:proguard-annotations:1.14.1")

    implementation 'com.facebook.fbjni:fbjni:0.0.2'
    // If headers are required.
    extractHeaders 'com.facebook.fbjni:fbjni:0.0.2:headers'
    // If the `.so` files are required for linking.
    extractJNI 'com.facebook.fbjni:fbjni:0.0.2'
}
